JAVA PROFILE 1.0.1, created Sun Jan 13 05:31:18 2013

Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

  - Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.

  - Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.

  - Neither the name of Oracle nor the names of its
    contributors may be used to endorse or promote products derived
    from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Header for -agentlib:hprof (or -Xrunhprof) ASCII Output (JDK 5.0 JVMTI based)

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME        is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
                the time spent by a thread waiting to enter a monitor.
                Entries in this record are TRACEs ranked by the percentage
                of total monitor contention time and a brief description
                of the monitor.  The "count" field indicates the number of 
                times the monitor was contended at that TRACE.

MONITOR DUMP    is a complete snapshot of all the monitors and threads in 
                the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

THREAD START (obj=5000016b, id = 200001, name="main", group="main")
THREAD END (id = 200001)
THREAD START (obj=5000016b, id = 200004, name="DestroyJavaVM", group="main")
THREAD END (id = 200004)
TRACE 300041:
	java.lang.ClassLoader.defineClass1(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.defineClass(ClassLoader.java:787)
	java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	java.net.URLClassLoader.defineClass(URLClassLoader.java:447)
	java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	java.security.AccessController.doPrivileged(AccessController.java:Unknown line)
TRACE 300315:
	clojure.lang.Util.hash(Util.java:116)
	name.stadig.deque$compare_color.invoke(deque.clj:42)
	name.stadig.deque$color.invoke(deque.clj:67)
	name.stadig.deque$red_QMARK_.invoke(deque.clj:97)
	name.stadig.deque$red_QMARK_.invoke(deque.clj:95)
	name.stadig.deque$set_prefix.invoke(deque.clj:408)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
TRACE 300324:
	name.stadig.deque$array_slice.invoke(deque.clj:157)
	name.stadig.deque$two_buffer_case.invoke(deque.clj:198)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:425)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
TRACE 300313:
	name.stadig.deque$array_slice.invoke(deque.clj:157)
	name.stadig.deque$two_buffer_case.invoke(deque.clj:198)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
TRACE 300290:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:187)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:416)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300320:
	name.stadig.deque$array_slice.invoke(deque.clj:157)
	name.stadig.deque$two_buffer_case.invoke(deque.clj:199)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
TRACE 300335:
	clojure.lang.Util.hash(Util.java:116)
	name.stadig.deque$compare_color.invoke(deque.clj:42)
	name.stadig.deque$color.invoke(deque.clj:67)
	name.stadig.deque$red_QMARK_.invoke(deque.clj:97)
	name.stadig.deque$red_QMARK_.invoke(deque.clj:95)
	name.stadig.deque$set_prefix.invoke(deque.clj:419)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
TRACE 300339:
	clojure.core$range$fn__4149.invoke(core.clj:2618)
	clojure.lang.LazySeq.sval(LazySeq.java:42)
	clojure.lang.LazySeq.seq(LazySeq.java:60)
	clojure.lang.ChunkedCons.chunkedNext(ChunkedCons.java:59)
	clojure.core$chunk_next.invoke(core.clj:644)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:92)
	clojure.core.protocols$fn__5854$G__5849__5863.invoke(protocols.clj:19)
	clojure.core.protocols$seq_reduce.invoke(protocols.clj:31)
TRACE 300288:
	clojure.lang.RT.object_array(RT.java:1526)
	name.stadig.deque$array_push.invoke(deque.clj:167)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:94)
TRACE 300296:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:187)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300153:
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
	clojure.lang.RT.load(RT.java:400)
	clojure.lang.RT.doInit(RT.java:436)
	clojure.lang.RT.<clinit>(RT.java:318)
	clojure.lang.Namespace.<init>(Namespace.java:34)
TRACE 300316:
	clojure.lang.Util.hash(Util.java:116)
	name.stadig.deque$compare_color.invoke(deque.clj:42)
	name.stadig.deque$color.invoke(deque.clj:67)
	name.stadig.deque$yellow_QMARK_.invoke(deque.clj:88)
	name.stadig.deque$regularize.invoke(deque.clj:327)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
TRACE 300059:
	java.lang.String.toCharArray(String.java:2753)
	java.util.zip.ZipCoder.getBytes(ZipCoder.java:78)
	java.util.zip.ZipFile.getEntry(ZipFile.java:302)
	java.util.jar.JarFile.getEntry(JarFile.java:225)
	java.util.jar.JarFile.getJarEntry(JarFile.java:208)
	sun.misc.URLClassPath$JarLoader.getResource(URLClassPath.java:817)
	sun.misc.URLClassPath.getResource(URLClassPath.java:195)
	java.net.URLClassLoader$1.run(URLClassLoader.java:358)
TRACE 300283:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:193)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300317:
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:425)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:94)
TRACE 300318:
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:94)
	clojure.core.protocols$fn__5854$G__5849__5863.invoke(protocols.clj:19)
TRACE 300319:
	name.stadig.deque$array_slice.invoke(deque.clj:157)
	name.stadig.deque$two_buffer_case.invoke(deque.clj:199)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:425)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
TRACE 300325:
	clojure.lang.Util.hash(Util.java:116)
	name.stadig.deque$compare_color.invoke(deque.clj:42)
	name.stadig.deque$color.invoke(deque.clj:67)
	name.stadig.deque$red_QMARK_.invoke(deque.clj:97)
	name.stadig.deque$set_prefix.invoke(deque.clj:428)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
TRACE 300337:
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:94)
TRACE 300351:
	clojure.core$chunk_buffer.invoke(core.clj:628)
	clojure.core$range$fn__4149.invoke(core.clj:2611)
	clojure.lang.LazySeq.sval(LazySeq.java:42)
	clojure.lang.LazySeq.seq(LazySeq.java:60)
	clojure.lang.ChunkedCons.chunkedNext(ChunkedCons.java:59)
	clojure.core$chunk_next.invoke(core.clj:644)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:92)
	clojure.core.protocols$fn__5854$G__5849__5863.invoke(protocols.clj:19)
TRACE 300356:
	name.stadig.deque$array_slice.invoke(deque.clj:157)
	name.stadig.deque$two_buffer_case.invoke(deque.clj:198)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:416)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
TRACE 300171:
	java.util.zip.Inflater.inflateBytes(Inflater.java:Unknown line)
	java.util.zip.Inflater.inflate(Inflater.java:256)
	java.util.zip.InflaterInputStream.read(InflaterInputStream.java:152)
	sun.misc.Resource.getBytes(Resource.java:124)
	java.net.URLClassLoader.defineClass(URLClassLoader.java:443)
	java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	java.net.URLClassLoader$1.run(URLClassLoader.java:355)
TRACE 300289:
	java.lang.System.arraycopy(System.java:Unknown line)
	name.stadig.deque$array_push.invoke(deque.clj:168)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:94)
TRACE 300302:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:197)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:416)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300303:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:205)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:425)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300323:
	name.stadig.deque$color.invoke(deque.clj:67)
	name.stadig.deque$red_QMARK_.invoke(deque.clj:97)
	name.stadig.deque$red_QMARK_.invoke(deque.clj:95)
	name.stadig.deque$set_prefix.invoke(deque.clj:419)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
TRACE 300326:
	clojure.lang.Util.hash(Util.java:116)
	name.stadig.deque$compare_color.invoke(deque.clj:42)
	name.stadig.deque$color.invoke(deque.clj:67)
	name.stadig.deque$yellow_QMARK_.invoke(deque.clj:88)
	name.stadig.deque$regularize.invoke(deque.clj:327)
	name.stadig.deque$set_prefix.invoke(deque.clj:425)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
TRACE 300329:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:199)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300330:
	clojure.lang.Util.hash(Util.java:116)
	name.stadig.deque$compare_color.invoke(deque.clj:42)
	name.stadig.deque$color.invoke(deque.clj:67)
	name.stadig.deque$yellow_QMARK_.invoke(deque.clj:88)
	name.stadig.deque$child_yellow_QMARK_.invoke(deque.clj:106)
	name.stadig.deque$regularize.invoke(deque.clj:332)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
TRACE 300347:
	name.stadig.deque$color.invoke(deque.clj:67)
	name.stadig.deque$red_QMARK_.invoke(deque.clj:97)
	name.stadig.deque$red_QMARK_.invoke(deque.clj:95)
	name.stadig.deque$set_prefix.invoke(deque.clj:408)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
TRACE 300348:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:198)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300352:
	name.stadig.deque$regularize.invoke(deque.clj:332)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:94)
TRACE 300032:
	java.security.SecureClassLoader.getPermissions(SecureClassLoader.java:192)
	java.net.URLClassLoader.getPermissions(URLClassLoader.java:633)
	sun.misc.Launcher$AppClassLoader.getPermissions(Launcher.java:316)
	java.security.SecureClassLoader.getProtectionDomain(SecureClassLoader.java:206)
	java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	java.net.URLClassLoader.defineClass(URLClassLoader.java:447)
	java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	java.net.URLClassLoader$1.run(URLClassLoader.java:361)
TRACE 300061:
	name.stadig.deque.<clinit>(<Unknown Source>:Unknown line)
TRACE 300062:
	java.lang.String.substring(String.java:1913)
	sun.net.www.protocol.jar.Handler.parseURL(Handler.java:145)
	java.net.URL.<init>(URL.java:614)
	java.net.URL.<init>(URL.java:482)
	sun.misc.URLClassPath$JarLoader.checkResource(URLClassPath.java:734)
	sun.misc.URLClassPath$JarLoader.getResource(URLClassPath.java:819)
	sun.misc.URLClassPath.getResource(URLClassPath.java:195)
	java.net.URLClassLoader$1.run(URLClassLoader.java:358)
TRACE 300064:
	java.lang.ClassLoader.findBootstrapClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findBootstrapClassOrNull(ClassLoader.java:1057)
	java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	java.lang.ClassLoader.loadClass(ClassLoader.java:410)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	java.lang.ClassLoader.loadClass(ClassLoader.java:356)
	clojure.lang.Namespace.<init>(Namespace.java:34)
	clojure.lang.Namespace.findOrCreate(Namespace.java:176)
TRACE 300090:
	java.lang.ClassLoader.findBootstrapClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findBootstrapClassOrNull(ClassLoader.java:1057)
	java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	java.lang.ClassLoader.loadClass(ClassLoader.java:410)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	java.lang.ClassLoader.loadClass(ClassLoader.java:356)
	clojure.lang.RT.<clinit>(RT.java:38)
	clojure.lang.Namespace.<init>(Namespace.java:34)
TRACE 300103:
	clojure.lang.RT.list(RT.java:1478)
	clojure.lang.Var.bindRoot(Var.java:304)
	clojure.lang.Var.intern(Var.java:137)
	clojure.lang.Var.intern(Var.java:131)
	clojure.lang.RT.<clinit>(RT.java:173)
	clojure.lang.Namespace.<init>(Namespace.java:34)
	clojure.lang.Namespace.findOrCreate(Namespace.java:176)
	clojure.lang.Var.internPrivate(Var.java:163)
TRACE 300104:
	clojure.lang.PersistentList.<clinit>(PersistentList.java:22)
	clojure.lang.RT.list(RT.java:1478)
	clojure.lang.Var.bindRoot(Var.java:304)
	clojure.lang.Var.intern(Var.java:137)
	clojure.lang.Var.intern(Var.java:131)
	clojure.lang.RT.<clinit>(RT.java:173)
	clojure.lang.Namespace.<init>(Namespace.java:34)
	clojure.lang.Namespace.findOrCreate(Namespace.java:176)
TRACE 300108:
	java.lang.String.toCharArray(String.java:2753)
	java.util.zip.ZipCoder.getBytes(ZipCoder.java:78)
	java.util.zip.ZipFile.getInputStream(ZipFile.java:347)
	java.util.jar.JarFile.getInputStream(JarFile.java:403)
	sun.misc.URLClassPath$JarLoader$2.getInputStream(URLClassPath.java:752)
	sun.misc.Resource.cachedInputStream(Resource.java:77)
	sun.misc.Resource.getByteBuffer(Resource.java:160)
	java.net.URLClassLoader.defineClass(URLClassLoader.java:436)
TRACE 300109:
	java.lang.ClassLoader.findBootstrapClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findBootstrapClassOrNull(ClassLoader.java:1057)
	java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	java.lang.ClassLoader.loadClass(ClassLoader.java:410)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	java.lang.ClassLoader.loadClass(ClassLoader.java:356)
	clojure.lang.Compiler.<clinit>(Compiler.java:101)
	clojure.lang.RT.baseLoader(RT.java:2012)
TRACE 300118:
	java.lang.System.arraycopy(System.java:Unknown line)
	java.lang.String.getChars(String.java:826)
	java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:416)
	java.lang.StringBuilder.append(StringBuilder.java:132)
	sun.net.util.URLUtil.urlNoFragString(URLUtil.java:52)
	sun.net.www.protocol.jar.JarFileFactory.getCachedJarFile(JarFileFactory.java:110)
	sun.net.www.protocol.jar.JarFileFactory.get(JarFileFactory.java:75)
	sun.net.www.protocol.jar.JarURLConnection.connect(JarURLConnection.java:122)
TRACE 300152:
	java.lang.CharacterDataLatin1.toLowerCase(CharacterDataLatin1.java:136)
	java.lang.Character.toLowerCase(Character.java:6148)
	java.lang.Character.toLowerCase(Character.java:6119)
	java.lang.String.regionMatches(String.java:1356)
	java.net.URL.<init>(URL.java:532)
	java.net.URL.<init>(URL.java:482)
	java.net.URL.<init>(URL.java:431)
	java.net.JarURLConnection.parseSpecs(JarURLConnection.java:179)
TRACE 300156:
	sun.misc.Unsafe.getObject(Unsafe.java:Unknown line)
	java.util.concurrent.ConcurrentHashMap.putIfAbsent(ConcurrentHashMap.java:1146)
	clojure.lang.Keyword.intern(Keyword.java:37)
	clojure.lang.RT.keyword(RT.java:326)
	clojure.core__init.__init1(<Unknown Source>:Unknown line)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
TRACE 300158:
	java.lang.String.intern(String.java:Unknown line)
	clojure.lang.Symbol.intern(Symbol.java:56)
	clojure.lang.RT.var(RT.java:330)
	clojure.core__init.__init6(<Unknown Source>:Unknown line)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
TRACE 300159:
	clojure.core__init.__init8(<Unknown Source>:Unknown line)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
	clojure.lang.RT.load(RT.java:400)
	clojure.lang.RT.doInit(RT.java:436)
TRACE 300160:
	java.math.BigInteger.<clinit>(BigInteger.java:2670)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:186)
	clojure.core__init.__init11(<Unknown Source>:Unknown line)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
TRACE 300162:
	clojure.core__init.__init13(<Unknown Source>:Unknown line)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
	clojure.lang.RT.load(RT.java:400)
	clojure.lang.RT.doInit(RT.java:436)
TRACE 300166:
	clojure.core__init.__init15(<Unknown Source>:Unknown line)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
	clojure.lang.RT.load(RT.java:400)
	clojure.lang.RT.doInit(RT.java:436)
TRACE 300167:
	sun.misc.Unsafe.getObjectVolatile(Unsafe.java:Unknown line)
	java.util.concurrent.ConcurrentHashMap.entryAt(ConcurrentHashMap.java:304)
	java.util.concurrent.ConcurrentHashMap$Segment.put(ConcurrentHashMap.java:437)
	java.util.concurrent.ConcurrentHashMap.putIfAbsent(ConcurrentHashMap.java:1149)
	clojure.lang.Keyword.intern(Keyword.java:37)
	clojure.lang.RT.keyword(RT.java:326)
	clojure.core__init.__init18(<Unknown Source>:Unknown line)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
TRACE 300168:
	clojure.core__init.__init20(<Unknown Source>:Unknown line)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
	clojure.lang.RT.load(RT.java:400)
	clojure.lang.RT.doInit(RT.java:436)
TRACE 300169:
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:186)
	clojure.core__init.__init21(<Unknown Source>:Unknown line)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
TRACE 300170:
	java.lang.String.intern(String.java:Unknown line)
	clojure.lang.Symbol.intern(Symbol.java:56)
	clojure.lang.RT.keyword(RT.java:326)
	clojure.core__init.__init22(<Unknown Source>:Unknown line)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
TRACE 300172:
	clojure.core__init.load(<Unknown Source>:461)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
	clojure.lang.RT.load(RT.java:400)
	clojure.lang.RT.doInit(RT.java:436)
TRACE 300173:
	clojure.core__init.load(<Unknown Source>:790)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
	clojure.lang.RT.load(RT.java:400)
	clojure.lang.RT.doInit(RT.java:436)
TRACE 300174:
	java.lang.System.arraycopy(System.java:Unknown line)
	java.util.Arrays.copyOf(Arrays.java:2272)
	sun.misc.Resource.getBytes(Resource.java:117)
	java.net.URLClassLoader.defineClass(URLClassLoader.java:443)
	java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	java.security.AccessController.doPrivileged(AccessController.java:Unknown line)
TRACE 300175:
	clojure.core__init.load(<Unknown Source>:1258)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
	clojure.lang.RT.load(RT.java:400)
	clojure.lang.RT.doInit(RT.java:436)
TRACE 300176:
	java.lang.Thread.currentThread(Thread.java:Unknown line)
	java.lang.ThreadLocal.get(ThreadLocal.java:143)
	java.lang.StringCoding.deref(StringCoding.java:63)
	java.lang.StringCoding.encode(StringCoding.java:330)
	java.lang.String.getBytes(String.java:916)
	java.io.UnixFileSystem.getBooleanAttributes0(UnixFileSystem.java:Unknown line)
	java.io.UnixFileSystem.getBooleanAttributes(UnixFileSystem.java:242)
	java.io.File.exists(File.java:772)
TRACE 300177:
	clojure.core__init.load(<Unknown Source>:2251)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
	clojure.lang.RT.load(RT.java:400)
	clojure.lang.RT.doInit(RT.java:436)
TRACE 300178:
	java.security.AccessController.doPrivileged(AccessController.java:Unknown line)
	java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	java.lang.ClassLoader.loadClass(ClassLoader.java:423)
	java.lang.ClassLoader.loadClass(ClassLoader.java:410)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	java.lang.ClassLoader.loadClass(ClassLoader.java:356)
	clojure.core__init.load(<Unknown Source>:2896)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
TRACE 300179:
	java.lang.StringCoding$StringEncoder.encode(StringCoding.java:300)
	java.lang.StringCoding.encode(StringCoding.java:344)
	java.lang.String.getBytes(String.java:916)
	java.io.UnixFileSystem.getBooleanAttributes0(UnixFileSystem.java:Unknown line)
	java.io.UnixFileSystem.getBooleanAttributes(UnixFileSystem.java:242)
	java.io.File.exists(File.java:772)
	sun.misc.URLClassPath$FileLoader.getResource(URLClassPath.java:1057)
	sun.misc.URLClassPath.getResource(URLClassPath.java:195)
TRACE 300180:
	java.util.Arrays.copyOfRange(Arrays.java:2694)
	java.lang.String.<init>(String.java:203)
	sun.net.www.ParseUtil.encodePath(ParseUtil.java:146)
	sun.misc.URLClassPath$FileLoader.getResource(URLClassPath.java:1035)
	sun.misc.URLClassPath.getResource(URLClassPath.java:195)
	java.net.URLClassLoader$1.run(URLClassLoader.java:358)
	java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	java.security.AccessController.doPrivileged(AccessController.java:Unknown line)
TRACE 300181:
	clojure.core__init.load(<Unknown Source>:3287)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
	clojure.lang.RT.load(RT.java:400)
	clojure.lang.RT.doInit(RT.java:436)
TRACE 300182:
	clojure.core__init.load(<Unknown Source>:3475)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
	clojure.lang.RT.load(RT.java:400)
	clojure.lang.RT.doInit(RT.java:436)
TRACE 300183:
	java.lang.ClassLoader.findBootstrapClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findBootstrapClassOrNull(ClassLoader.java:1057)
	java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	java.lang.ClassLoader.loadClass(ClassLoader.java:410)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	java.lang.ClassLoader.loadClass(ClassLoader.java:356)
	clojure.core__init.load(<Unknown Source>:3585)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
TRACE 300184:
	java.lang.AbstractStringBuilder.<init>(AbstractStringBuilder.java:64)
	java.lang.StringBuilder.<init>(StringBuilder.java:85)
	java.io.UnixFileSystem.resolve(UnixFileSystem.java:108)
	java.io.File.<init>(File.java:341)
	sun.misc.URLClassPath$FileLoader.getResource(URLClassPath.java:1054)
	sun.misc.URLClassPath.getResource(URLClassPath.java:195)
	java.net.URLClassLoader$1.run(URLClassLoader.java:358)
	java.net.URLClassLoader$1.run(URLClassLoader.java:355)
TRACE 300185:
	clojure.core$print_str.<clinit>(core.clj:4208)
	clojure.core__init.load(<Unknown Source>:4181)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
	clojure.lang.RT.load(RT.java:400)
TRACE 300186:
	clojure.core__init.load(<Unknown Source>:4355)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
	clojure.lang.RT.load(RT.java:400)
	clojure.lang.RT.doInit(RT.java:436)
TRACE 300187:
	java.util.zip.ZipCoder.getBytes(ZipCoder.java:80)
	java.util.zip.ZipFile.getInputStream(ZipFile.java:347)
	java.util.jar.JarFile.getInputStream(JarFile.java:403)
	sun.misc.URLClassPath$JarLoader$2.getInputStream(URLClassPath.java:752)
	sun.misc.Resource.cachedInputStream(Resource.java:77)
	sun.misc.Resource.getByteBuffer(Resource.java:160)
	java.net.URLClassLoader.defineClass(URLClassLoader.java:436)
	java.net.URLClassLoader.access$100(URLClassLoader.java:71)
TRACE 300188:
	clojure.core__init.load(<Unknown Source>:4712)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
	clojure.lang.RT.load(RT.java:400)
	clojure.lang.RT.doInit(RT.java:436)
TRACE 300189:
	java.util.zip.ZipFile.getEntry(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getEntry(ZipFile.java:302)
	java.util.jar.JarFile.getEntry(JarFile.java:225)
	java.util.jar.JarFile.getJarEntry(JarFile.java:208)
	sun.misc.URLClassPath$JarLoader.getResource(URLClassPath.java:817)
	sun.misc.URLClassPath.getResource(URLClassPath.java:195)
	java.net.URLClassLoader$1.run(URLClassLoader.java:358)
	java.net.URLClassLoader$1.run(URLClassLoader.java:355)
TRACE 300195:
	clojure.core__init.load(<Unknown Source>:5172)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
	clojure.lang.RT.load(RT.java:400)
	clojure.lang.RT.doInit(RT.java:436)
TRACE 300196:
	clojure.core__init.load(<Unknown Source>:5172)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
	clojure.lang.RT.load(RT.java:400)
	clojure.lang.RT.doInit(RT.java:436)
TRACE 300197:
	java.lang.ClassLoader.findBootstrapClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findBootstrapClassOrNull(ClassLoader.java:1057)
	java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	java.lang.ClassLoader.loadClass(ClassLoader.java:410)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	java.lang.ClassLoader.loadClass(ClassLoader.java:356)
	clojure.core__init.load(<Unknown Source>:5833)
	clojure.core__init.<clinit>(<Unknown Source>:Unknown line)
TRACE 300198:
	clojure.core_proxy__init.load(<Unknown Source>:9)
	clojure.core_proxy__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
	clojure.lang.RT.load(RT.java:400)
	clojure.core$load$fn__4890.invoke(core.clj:5415)
TRACE 300199:
	java.lang.Object.hashCode(Object.java:Unknown line)
	clojure.lang.Util.hasheq(Util.java:126)
	clojure.lang.PersistentHashMap.hash(PersistentHashMap.java:121)
	clojure.lang.PersistentHashMap.assoc(PersistentHashMap.java:143)
	clojure.lang.MultiFn.addMethod(MultiFn.java:50)
	clojure.core_print__init.load(<Unknown Source>:187)
	clojure.core_print__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
TRACE 300200:
	clojure.genclass__init.load(<Unknown Source>:83)
	clojure.genclass__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
	clojure.lang.RT.load(RT.java:400)
	clojure.core$load$fn__4890.invoke(core.clj:5415)
TRACE 300201:
	java.lang.Object.clone(Object.java:Unknown line)
	clojure.lang.PersistentHashMap.cloneAndSet(PersistentHashMap.java:987)
	clojure.lang.PersistentHashMap.access$000(PersistentHashMap.java:29)
	clojure.lang.PersistentHashMap$ArrayNode.assoc(PersistentHashMap.java:346)
	clojure.lang.PersistentHashMap.assoc(PersistentHashMap.java:143)
	clojure.lang.Namespace.intern(Namespace.java:62)
	clojure.lang.Var.intern(Var.java:170)
	clojure.lang.RT.var(RT.java:330)
TRACE 300202:
	java.util.zip.ZipFile.getEntry(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getInputStream(ZipFile.java:347)
	java.util.jar.JarFile.getInputStream(JarFile.java:403)
	sun.misc.URLClassPath$JarLoader$2.getInputStream(URLClassPath.java:752)
	sun.misc.Resource.cachedInputStream(Resource.java:77)
	sun.misc.Resource.getByteBuffer(Resource.java:160)
	java.net.URLClassLoader.defineClass(URLClassLoader.java:436)
	java.net.URLClassLoader.access$100(URLClassLoader.java:71)
TRACE 300203:
	clojure.core$emit_impl.<clinit>(core_deftype.clj:733)
	clojure.core_deftype__init.load(<Unknown Source>:632)
	clojure.core_deftype__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
	clojure.lang.RT.load(RT.java:400)
TRACE 300204:
	java.lang.System.nanoTime(System.java:Unknown line)
	java.lang.ClassLoader.loadClass(ClassLoader.java:422)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	java.lang.ClassLoader.loadClass(ClassLoader.java:356)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:186)
	clojure.core.protocols__init.__init0(<Unknown Source>:Unknown line)
	clojure.core.protocols__init.<clinit>(<Unknown Source>:Unknown line)
TRACE 300205:
	clojure.core$refer.doInvoke(core.clj:3779)
	clojure.lang.RestFn.invoke(RestFn.java:410)
	clojure.core.protocols$loading__4784__auto__.invoke(protocols.clj:9)
	clojure.core.protocols__init.load(<Unknown Source>:9)
	clojure.core.protocols__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
TRACE 300206:
	clojure.lang.PersistentHashMap$NodeSeq.first(PersistentHashMap.java:1095)
	clojure.lang.PersistentHashMap$ArrayNode$Seq.first(PersistentHashMap.java:492)
	clojure.lang.APersistentMap$KeySeq.first(APersistentMap.java:143)
	clojure.lang.RT.first(RT.java:566)
	clojure.core$first.invoke(core.clj:55)
	clojure.core$refer.doInvoke(core.clj:3771)
	clojure.lang.RestFn.invoke(RestFn.java:410)
	clojure.core.protocols$loading__4784__auto__.invoke(protocols.clj:9)
TRACE 300207:
	clojure.lang.Util.equiv(Util.java:30)
	clojure.lang.PersistentArrayMap.equalKey(PersistentArrayMap.java:201)
	clojure.lang.PersistentArrayMap.indexOf(PersistentArrayMap.java:194)
	clojure.lang.PersistentArrayMap.assoc(PersistentArrayMap.java:127)
	clojure.lang.PersistentArrayMap.assoc(PersistentArrayMap.java:29)
	clojure.lang.RT.assoc(RT.java:691)
	clojure.core$assoc.invoke(core.clj:187)
	clojure.core$assoc_in.invoke(core.clj:5459)
TRACE 300208:
	sun.misc.Unsafe.getObject(Unsafe.java:Unknown line)
	java.util.concurrent.ConcurrentHashMap.putIfAbsent(ConcurrentHashMap.java:1146)
	clojure.lang.Keyword.intern(Keyword.java:37)
	clojure.lang.RT.keyword(RT.java:326)
	clojure.gvec__init.__init0(<Unknown Source>:Unknown line)
	clojure.gvec__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
TRACE 300209:
	clojure.lang.PersistentHashMap$BitmapIndexedNode.assoc(PersistentHashMap.java:708)
	clojure.lang.PersistentHashMap.createNode(PersistentHashMap.java:1018)
	clojure.lang.PersistentHashMap.access$300(PersistentHashMap.java:29)
	clojure.lang.PersistentHashMap$BitmapIndexedNode.assoc(PersistentHashMap.java:537)
	clojure.lang.PersistentHashMap$BitmapIndexedNode.assoc(PersistentHashMap.java:526)
	clojure.lang.PersistentHashMap.assoc(PersistentHashMap.java:143)
	clojure.lang.PersistentHashMap.assoc(PersistentHashMap.java:29)
	clojure.lang.RT.assoc(RT.java:691)
TRACE 300210:
	clojure.lang.PersistentHashMap$BitmapIndexedNode.find(PersistentHashMap.java:610)
	clojure.lang.PersistentHashMap$ArrayNode.find(PersistentHashMap.java:378)
	clojure.lang.PersistentHashMap.valAt(PersistentHashMap.java:153)
	clojure.lang.PersistentHashMap.valAt(PersistentHashMap.java:157)
	clojure.lang.APersistentMap.invoke(APersistentMap.java:188)
	clojure.core$refer.doInvoke(core.clj:3773)
	clojure.lang.RestFn.invoke(RestFn.java:410)
	clojure.instant$loading__4784__auto__.invoke(instant.clj:9)
TRACE 300211:
	clojure.instant__init.load(<Unknown Source>:17)
	clojure.instant__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
	clojure.lang.RT.load(RT.java:400)
	clojure.core$load$fn__4890.invoke(core.clj:5415)
TRACE 300226:
	clojure.lang.PersistentArrayMap.indexOf(PersistentArrayMap.java:192)
	clojure.lang.PersistentArrayMap.valAt(PersistentArrayMap.java:177)
	clojure.lang.PersistentArrayMap.valAt(PersistentArrayMap.java:184)
	clojure.lang.Var.isPublic(Var.java:270)
	clojure.core$ns_publics$fn__4371.invoke(core.clj:3726)
	clojure.core$filter_key.invoke(core.clj:3650)
	clojure.core$ns_publics.invoke(core.clj:3727)
	clojure.core$refer.doInvoke(core.clj:3765)
TRACE 300227:
	clojure.lang.PersistentArrayMap.indexOf(PersistentArrayMap.java:192)
	clojure.lang.PersistentArrayMap.valAt(PersistentArrayMap.java:177)
	clojure.lang.PersistentArrayMap.valAt(PersistentArrayMap.java:184)
	clojure.lang.APersistentMap.invoke(APersistentMap.java:188)
	clojure.core$refer.doInvoke(core.clj:3779)
	clojure.lang.RestFn.invoke(RestFn.java:410)
	clojure.uuid$loading__4784__auto__.invoke(uuid.clj:9)
	clojure.uuid__init.load(<Unknown Source>:9)
TRACE 300228:
	sun.misc.Unsafe.getObject(Unsafe.java:Unknown line)
	java.util.concurrent.ConcurrentHashMap.putIfAbsent(ConcurrentHashMap.java:1146)
	java.lang.ClassLoader.getClassLoadingLock(ClassLoader.java:458)
	java.lang.ClassLoader.loadClass(ClassLoader.java:403)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	java.lang.ClassLoader.loadClass(ClassLoader.java:356)
	clojure.uuid__init.load(<Unknown Source>:18)
	clojure.uuid__init.<clinit>(<Unknown Source>:Unknown line)
TRACE 300229:
	java.lang.String.intern(String.java:Unknown line)
	clojure.lang.Symbol.intern(Symbol.java:56)
	clojure.lang.RT.keyword(RT.java:326)
	clojure.java.io__init.__init0(<Unknown Source>:Unknown line)
	clojure.java.io__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
TRACE 300230:
	java.util.concurrent.atomic.AtomicBoolean.get(AtomicBoolean.java:86)
	clojure.lang.Var.get(Var.java:201)
	clojure.core$refer.doInvoke(core.clj:3779)
	clojure.lang.RestFn.invoke(RestFn.java:410)
	clojure.java.io$loading__4784__auto__.invoke(io.clj:9)
	clojure.java.io__init.load(<Unknown Source>:9)
	clojure.java.io__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
TRACE 300231:
	java.lang.CharacterDataLatin1.toLowerCase(CharacterDataLatin1.java:134)
	java.lang.Character.toLowerCase(Character.java:6148)
	java.lang.Character.toLowerCase(Character.java:6119)
	java.lang.String.regionMatches(String.java:1356)
	java.net.URL.<init>(URL.java:532)
	java.net.URL.<init>(URL.java:482)
	sun.misc.URLClassPath$JarLoader.checkResource(URLClassPath.java:734)
	sun.misc.URLClassPath$JarLoader.getResource(URLClassPath.java:819)
TRACE 300232:
	java.lang.Object.clone(Object.java:Unknown line)
	clojure.lang.PersistentHashMap.cloneAndSet(PersistentHashMap.java:987)
	clojure.lang.PersistentHashMap.access$000(PersistentHashMap.java:29)
	clojure.lang.PersistentHashMap$ArrayNode.assoc(PersistentHashMap.java:342)
	clojure.lang.PersistentHashMap$ArrayNode.assoc(PersistentHashMap.java:343)
	clojure.lang.PersistentHashMap.assoc(PersistentHashMap.java:143)
	clojure.lang.PersistentHashMap.assoc(PersistentHashMap.java:29)
	clojure.lang.RT.assoc(RT.java:691)
TRACE 300233:
	java.lang.AbstractStringBuilder.<init>(AbstractStringBuilder.java:64)
	java.lang.StringBuilder.<init>(StringBuilder.java:85)
	java.net.URLStreamHandler.parseURL(URLStreamHandler.java:249)
	sun.net.www.protocol.file.Handler.parseURL(Handler.java:67)
	java.net.URL.<init>(URL.java:614)
	java.net.URL.<init>(URL.java:482)
	sun.misc.URLClassPath$FileLoader.getResource(URLClassPath.java:1035)
	sun.misc.URLClassPath.getResource(URLClassPath.java:195)
TRACE 300235:
	clojure.lang.LockingTransaction.run(LockingTransaction.java:262)
	clojure.lang.LockingTransaction.runInTransaction(LockingTransaction.java:231)
	clojure.core$load_one.invoke(core.clj:5232)
	clojure.core$load_lib.doInvoke(core.clj:5264)
	clojure.lang.RestFn.applyTo(RestFn.java:142)
	clojure.core$apply.invoke(core.clj:603)
	clojure.core$load_libs.doInvoke(core.clj:5298)
	clojure.lang.RestFn.applyTo(RestFn.java:137)
TRACE 300253:
	java.lang.AbstractStringBuilder.<init>(AbstractStringBuilder.java:64)
	java.lang.StringBuilder.<init>(StringBuilder.java:85)
	sun.net.www.protocol.jar.Handler.parseURL(Handler.java:160)
	java.net.URL.<init>(URL.java:614)
	java.net.URL.<init>(URL.java:482)
	sun.misc.URLClassPath$JarLoader.checkResource(URLClassPath.java:734)
	sun.misc.URLClassPath$JarLoader.getResource(URLClassPath.java:819)
	sun.misc.URLClassPath.getResource(URLClassPath.java:195)
TRACE 300254:
	java.io.UnixFileSystem.getBooleanAttributes0(UnixFileSystem.java:Unknown line)
	java.io.UnixFileSystem.getBooleanAttributes(UnixFileSystem.java:242)
	java.io.File.exists(File.java:772)
	sun.misc.URLClassPath$FileLoader.getResource(URLClassPath.java:1057)
	sun.misc.URLClassPath.getResource(URLClassPath.java:195)
	java.net.URLClassLoader$1.run(URLClassLoader.java:358)
	java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	java.security.AccessController.doPrivileged(AccessController.java:Unknown line)
TRACE 300255:
	java.lang.Throwable.fillInStackTrace(Throwable.java:Unknown line)
	java.lang.Throwable.fillInStackTrace(Throwable.java:782)
	java.lang.Throwable.<init>(Throwable.java:310)
	java.lang.Exception.<init>(Exception.java:102)
	java.security.PrivilegedActionException.<init>(PrivilegedActionException.java:66)
	java.security.AccessController.doPrivileged(AccessController.java:Unknown line)
	java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	java.lang.ClassLoader.loadClass(ClassLoader.java:423)
TRACE 300256:
	clojure.java.io__init.load(<Unknown Source>:377)
	clojure.java.io__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
	clojure.lang.RT.load(RT.java:400)
	clojure.core$load$fn__4890.invoke(core.clj:5415)
TRACE 300260:
	java.util.zip.ZipFile.freeEntry(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.access$1000(ZipFile.java:56)
	java.util.zip.ZipFile$ZipFileInputStream.close(ZipFile.java:724)
	java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:683)
	java.util.zip.ZipFile$ZipFileInflaterInputStream.fill(ZipFile.java:411)
	java.util.zip.InflaterInputStream.read(InflaterInputStream.java:158)
	sun.misc.Resource.getBytes(Resource.java:124)
	java.net.URLClassLoader.defineClass(URLClassLoader.java:443)
TRACE 300267:
	java.net.URL.<init>(URL.java:507)
	java.net.URL.<init>(URL.java:482)
	sun.misc.URLClassPath$FileLoader.getResource(URLClassPath.java:1034)
	sun.misc.URLClassPath.getResource(URLClassPath.java:195)
	java.net.URLClassLoader$1.run(URLClassLoader.java:358)
	java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	java.security.AccessController.doPrivileged(AccessController.java:Unknown line)
	java.net.URLClassLoader.findClass(URLClassLoader.java:354)
TRACE 300275:
	java.lang.Thread.currentThread(Thread.java:Unknown line)
	java.lang.ThreadLocal.get(ThreadLocal.java:143)
	clojure.lang.Var.getThreadBinding(Var.java:384)
	clojure.lang.Var.deref(Var.java:207)
	clojure.lang.Var.get(Var.java:203)
	clojure.core$refer.doInvoke(core.clj:3779)
	clojure.lang.RestFn.invoke(RestFn.java:410)
	clojure.lang.Var.invoke(Var.java:415)
TRACE 300276:
	clojure.lang.PersistentHashMap.assoc(PersistentHashMap.java:143)
	clojure.lang.PersistentHashMap.assoc(PersistentHashMap.java:29)
	clojure.lang.RT.assoc(RT.java:691)
	clojure.core$assoc.invoke(core.clj:187)
	clojure.core$filter_key.invoke(core.clj:3651)
	clojure.core$ns_publics.invoke(core.clj:3727)
	clojure.core$refer.doInvoke(core.clj:3765)
	clojure.lang.RestFn.invoke(RestFn.java:439)
TRACE 300277:
	java.net.URLClassLoader.findClass(URLClassLoader.java:370)
	java.lang.ClassLoader.loadClass(ClassLoader.java:423)
	java.lang.ClassLoader.loadClass(ClassLoader.java:410)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	java.lang.ClassLoader.loadClass(ClassLoader.java:356)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2050)
TRACE 300278:
	sun.misc.Unsafe.compareAndSwapObject(Unsafe.java:Unknown line)
	java.util.concurrent.atomic.AtomicReference.compareAndSet(AtomicReference.java:114)
	clojure.lang.Namespace.reference(Namespace.java:104)
	clojure.lang.Namespace.refer(Namespace.java:168)
	clojure.core$refer.doInvoke(core.clj:3779)
	clojure.lang.RestFn.invoke(RestFn.java:439)
	name.stadig.deque.protocol$loading__4784__auto__.invoke(protocol.clj:10)
	name.stadig.deque.protocol__init.load(<Unknown Source>:10)
TRACE 300279:
	name.stadig.deque.protocol$fn__81.invoke(protocol.clj:21)
	clojure.core$_reset_methods.invoke(core_deftype.clj:564)
	name.stadig.deque.protocol__init.load(<Unknown Source>:21)
	name.stadig.deque.protocol__init.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:264)
	clojure.lang.RT.loadClassForName(RT.java:2056)
	clojure.lang.RT.load(RT.java:419)
TRACE 300280:
	java.lang.Object.getClass(Object.java:Unknown line)
	clojure.lang.Numbers.bitOpsCast(Numbers.java:1000)
	clojure.lang.Numbers.shiftRight(Numbers.java:380)
	clojure.core$shift_mask.invoke(core.clj:5830)
	clojure.core$maybe_min_hash$fn__4949$fn__4951.invoke(core.clj:5840)
	clojure.core$map$fn__4087.invoke(core.clj:2434)
	clojure.lang.LazySeq.sval(LazySeq.java:42)
	clojure.lang.LazySeq.seq(LazySeq.java:60)
TRACE 300281:
	java.lang.Object.getClass(Object.java:Unknown line)
	clojure.lang.Numbers.ops(Numbers.java:942)
	clojure.lang.Numbers.isNeg(Numbers.java:98)
	name.stadig.deque$color.invoke(deque.clj:67)
	name.stadig.deque$red_QMARK_.invoke(deque.clj:97)
	name.stadig.deque$red_QMARK_.invoke(deque.clj:95)
	name.stadig.deque$set_prefix.invoke(deque.clj:408)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
TRACE 300282:
	clojure.lang.RT.object_array(RT.java:1526)
	name.stadig.deque$array_push.invoke(deque.clj:167)
	name.stadig.deque$two_buffer_case.invoke(deque.clj:198)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
TRACE 300284:
	java.lang.Object.getClass(Object.java:Unknown line)
	clojure.lang.Numbers.ops(Numbers.java:942)
	clojure.lang.Numbers.minus(Numbers.java:135)
	name.stadig.deque$array_slice.invoke(deque.clj:158)
	name.stadig.deque$two_buffer_case.invoke(deque.clj:198)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:425)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
TRACE 300285:
	java.lang.Object.getClass(Object.java:Unknown line)
	clojure.lang.Util.classOf(Util.java:95)
	name.stadig.deque$set_prefix.invoke(deque.clj:416)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300286:
	clojure.lang.RT.object_array(RT.java:1526)
	name.stadig.deque$array_slice.invoke(deque.clj:157)
	name.stadig.deque$two_buffer_case.invoke(deque.clj:198)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
TRACE 300287:
	clojure.lang.ChunkBuffer.add(ChunkBuffer.java:25)
	clojure.core$chunk_append.invoke(core.clj:632)
	clojure.core$range$fn__4149.invoke(core.clj:2617)
	clojure.lang.LazySeq.sval(LazySeq.java:42)
	clojure.lang.LazySeq.seq(LazySeq.java:60)
	clojure.lang.ChunkedCons.chunkedNext(ChunkedCons.java:59)
	clojure.core$chunk_next.invoke(core.clj:644)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:92)
TRACE 300291:
	java.lang.System.arraycopy(System.java:Unknown line)
	name.stadig.deque$array_push.invoke(deque.clj:168)
	name.stadig.deque$two_buffer_case.invoke(deque.clj:198)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:425)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
TRACE 300292:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:193)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:425)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300293:
	name.stadig.deque$red_QMARK_.invoke(deque.clj:92)
	name.stadig.deque$set_prefix.invoke(deque.clj:419)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:94)
TRACE 300294:
	name.stadig.deque$set_prefix.invoke(deque.clj:419)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:94)
	clojure.core.protocols$fn__5854$G__5849__5863.invoke(protocols.clj:19)
TRACE 300295:
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:58)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:94)
	clojure.core.protocols$fn__5854$G__5849__5863.invoke(protocols.clj:19)
	clojure.core.protocols$seq_reduce.invoke(protocols.clj:31)
	clojure.core.protocols$fn__5875.invoke(protocols.clj:54)
	clojure.core.protocols$fn__5828$G__5823__5841.invoke(protocols.clj:13)
	clojure.core$reduce.invoke(core.clj:6030)
	clojure.core$into.invoke(core.clj:6078)
TRACE 300297:
	name.stadig.deque$set_prefix.invoke(deque.clj:422)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:94)
	clojure.core.protocols$fn__5854$G__5849__5863.invoke(protocols.clj:19)
TRACE 300298:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:226)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300299:
	name.stadig.deque$set_prefix.invoke(deque.clj:408)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:94)
	clojure.core.protocols$fn__5854$G__5849__5863.invoke(protocols.clj:19)
TRACE 300300:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:187)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:425)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:58)
TRACE 300301:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:185)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:425)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300304:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:197)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:425)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300305:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:205)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300306:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:184)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300307:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:184)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:416)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300308:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:197)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:425)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:58)
TRACE 300309:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:187)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:425)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300310:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:205)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:416)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300311:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:193)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:416)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300312:
	clojure.lang.ChunkedCons.chunkedMore(ChunkedCons.java:65)
	clojure.lang.ChunkedCons.chunkedNext(ChunkedCons.java:59)
	clojure.core$chunk_next.invoke(core.clj:644)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:92)
	clojure.core.protocols$fn__5854$G__5849__5863.invoke(protocols.clj:19)
	clojure.core.protocols$seq_reduce.invoke(protocols.clj:31)
	clojure.core.protocols$fn__5875.invoke(protocols.clj:54)
	clojure.core.protocols$fn__5828$G__5823__5841.invoke(protocols.clj:13)
TRACE 300314:
	name.stadig.deque$set_prefix.invoke(deque.clj:416)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:94)
	clojure.core.protocols$fn__5854$G__5849__5863.invoke(protocols.clj:19)
TRACE 300321:
	clojure.core.protocols$fn__5890.invoke(protocols.clj:91)
	clojure.core.protocols$fn__5854$G__5849__5863.invoke(protocols.clj:19)
	clojure.core.protocols$seq_reduce.invoke(protocols.clj:31)
	clojure.core.protocols$fn__5875.invoke(protocols.clj:54)
	clojure.core.protocols$fn__5828$G__5823__5841.invoke(protocols.clj:13)
	clojure.core$reduce.invoke(core.clj:6030)
	clojure.core$into.invoke(core.clj:6078)
	name.stadig.deque$_main.doInvoke(deque.clj:661)
TRACE 300322:
	clojure.core.protocols$fn__5890.invoke(protocols.clj:91)
	clojure.core.protocols$fn__5854$G__5849__5863.invoke(protocols.clj:19)
	clojure.core.protocols$seq_reduce.invoke(protocols.clj:31)
	clojure.core.protocols$fn__5875.invoke(protocols.clj:54)
	clojure.core.protocols$fn__5828$G__5823__5841.invoke(protocols.clj:13)
	clojure.core$reduce.invoke(core.clj:6030)
	clojure.core$into.invoke(core.clj:6078)
	name.stadig.deque$_main.doInvoke(deque.clj:661)
TRACE 300327:
	clojure.lang.Numbers$LongOps.isPos(Numbers.java:422)
	clojure.lang.Numbers.isPos(Numbers.java:94)
	clojure.core$range$fn__4149.invoke(core.clj:2612)
	clojure.lang.LazySeq.sval(LazySeq.java:42)
	clojure.lang.LazySeq.seq(LazySeq.java:60)
	clojure.lang.ChunkedCons.chunkedNext(ChunkedCons.java:59)
	clojure.core$chunk_next.invoke(core.clj:644)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:92)
TRACE 300328:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:199)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:416)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300331:
	name.stadig.deque$array_slice.invoke(deque.clj:158)
	name.stadig.deque$two_buffer_case.invoke(deque.clj:198)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
TRACE 300332:
	clojure.core.protocols$fn__5890.invoke(protocols.clj:94)
	clojure.core.protocols$fn__5854$G__5849__5863.invoke(protocols.clj:19)
	clojure.core.protocols$seq_reduce.invoke(protocols.clj:31)
	clojure.core.protocols$fn__5875.invoke(protocols.clj:54)
	clojure.core.protocols$fn__5828$G__5823__5841.invoke(protocols.clj:13)
	clojure.core$reduce.invoke(core.clj:6030)
	clojure.core$into.invoke(core.clj:6078)
	name.stadig.deque$_main.doInvoke(deque.clj:661)
TRACE 300333:
	name.stadig.deque$persistent_deque.invoke(deque.clj:604)
	name.stadig.deque$regularize.invoke(deque.clj:333)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300334:
	clojure.core.protocols$fn__5890.invoke(protocols.clj:90)
	clojure.core.protocols$fn__5854$G__5849__5863.invoke(protocols.clj:19)
	clojure.core.protocols$seq_reduce.invoke(protocols.clj:31)
	clojure.core.protocols$fn__5875.invoke(protocols.clj:54)
	clojure.core.protocols$fn__5828$G__5823__5841.invoke(protocols.clj:13)
	clojure.core$reduce.invoke(core.clj:6030)
	clojure.core$into.invoke(core.clj:6078)
	name.stadig.deque$_main.doInvoke(deque.clj:661)
TRACE 300336:
	name.stadig.deque$array_slice.invoke(deque.clj:158)
	name.stadig.deque$two_buffer_case.invoke(deque.clj:198)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:416)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
TRACE 300338:
	name.stadig.deque$red_QMARK_.invoke(deque.clj:97)
	name.stadig.deque$red_QMARK_.invoke(deque.clj:95)
	name.stadig.deque$set_prefix.invoke(deque.clj:408)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300340:
	clojure.lang.Util.hash(Util.java:116)
	name.stadig.deque$compare_color.invoke(deque.clj:42)
	name.stadig.deque$color.invoke(deque.clj:67)
	name.stadig.deque$yellow_QMARK_.invoke(deque.clj:88)
	name.stadig.deque$regularize.invoke(deque.clj:327)
	name.stadig.deque$set_prefix.invoke(deque.clj:416)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
TRACE 300341:
	name.stadig.deque$array_slice.invoke(deque.clj:158)
	name.stadig.deque$two_buffer_case.invoke(deque.clj:199)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
TRACE 300342:
	name.stadig.deque$persistent_deque.invoke(deque.clj:609)
	name.stadig.deque$set_prefix.invoke(deque.clj:425)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:58)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:94)
TRACE 300343:
	clojure.lang.Util.hash(Util.java:116)
	name.stadig.deque$compare_color.invoke(deque.clj:51)
	name.stadig.deque$color.invoke(deque.clj:67)
	name.stadig.deque$red_QMARK_.invoke(deque.clj:97)
	name.stadig.deque$red_QMARK_.invoke(deque.clj:95)
	name.stadig.deque$set_prefix.invoke(deque.clj:419)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
TRACE 300344:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:184)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300345:
	name.stadig.deque$array_slice.invoke(deque.clj:158)
	name.stadig.deque$two_buffer_case.invoke(deque.clj:199)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:425)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
TRACE 300346:
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:94)
	clojure.core.protocols$fn__5854$G__5849__5863.invoke(protocols.clj:19)
	clojure.core.protocols$seq_reduce.invoke(protocols.clj:31)
TRACE 300349:
	clojure.lang.RT.object_array(RT.java:1526)
	name.stadig.deque$array_push.invoke(deque.clj:167)
	name.stadig.deque$two_buffer_case.invoke(deque.clj:198)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:416)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
TRACE 300350:
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:416)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:94)
TRACE 300353:
	clojure.core$chunk_cons.invoke(core.clj:647)
	clojure.core$range$fn__4149.invoke(core.clj:2621)
	clojure.lang.LazySeq.sval(LazySeq.java:42)
	clojure.lang.LazySeq.seq(LazySeq.java:60)
	clojure.lang.ChunkedCons.chunkedNext(ChunkedCons.java:59)
	clojure.core$chunk_next.invoke(core.clj:644)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:92)
	clojure.core.protocols$fn__5854$G__5849__5863.invoke(protocols.clj:19)
TRACE 300354:
	clojure.lang.Util.hash(Util.java:116)
	name.stadig.deque$compare_color.invoke(deque.clj:51)
	name.stadig.deque$color.invoke(deque.clj:67)
	name.stadig.deque$yellow_QMARK_.invoke(deque.clj:88)
	name.stadig.deque$child_yellow_QMARK_.invoke(deque.clj:106)
	name.stadig.deque$regularize.invoke(deque.clj:332)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
TRACE 300355:
	clojure.lang.LazilyPersistentVector.createOwning(LazilyPersistentVector.java:24)
	clojure.lang.RT.vector(RT.java:1457)
	name.stadig.deque$two_buffer_case.invoke(deque.clj:184)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:425)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
TRACE 300357:
	clojure.core$seq.invoke(core.clj:133)
	clojure.core.protocols$fn__5890.invoke(protocols.clj:90)
	clojure.core.protocols$fn__5854$G__5849__5863.invoke(protocols.clj:19)
	clojure.core.protocols$seq_reduce.invoke(protocols.clj:31)
	clojure.core.protocols$fn__5875.invoke(protocols.clj:54)
	clojure.core.protocols$fn__5828$G__5823__5841.invoke(protocols.clj:13)
	clojure.core$reduce.invoke(core.clj:6030)
	clojure.core$into.invoke(core.clj:6078)
TRACE 300358:
	clojure.lang.Util.hash(Util.java:116)
	name.stadig.deque$compare_color.invoke(deque.clj:42)
	name.stadig.deque$color.invoke(deque.clj:67)
	name.stadig.deque$yellow_QMARK_.invoke(deque.clj:88)
	name.stadig.deque$child_yellow_QMARK_.invoke(deque.clj:106)
	name.stadig.deque$regularize.invoke(deque.clj:332)
	name.stadig.deque$set_prefix.invoke(deque.clj:416)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
TRACE 300359:
	clojure.lang.LazilyPersistentVector.createOwning(LazilyPersistentVector.java:24)
	clojure.lang.RT.vector(RT.java:1457)
	name.stadig.deque$two_buffer_case.invoke(deque.clj:215)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
TRACE 300360:
	name.stadig.deque$persistent_deque.invoke(deque.clj:609)
	name.stadig.deque$regularize.invoke(deque.clj:343)
	name.stadig.deque$set_prefix.invoke(deque.clj:416)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300361:
	name.stadig.deque$persistent_deque.invoke(deque.clj:609)
	name.stadig.deque$regularize.invoke(deque.clj:336)
	name.stadig.deque$set_prefix.invoke(deque.clj:431)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300362:
	name.stadig.deque$two_buffer_case.invoke(deque.clj:215)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:425)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300363:
	clojure.lang.Util.hash(Util.java:116)
	name.stadig.deque$compare_color.invoke(deque.clj:42)
	name.stadig.deque$color.invoke(deque.clj:67)
	name.stadig.deque$yellow_QMARK_.invoke(deque.clj:88)
	name.stadig.deque$child_yellow_QMARK_.invoke(deque.clj:106)
	name.stadig.deque$regularize.invoke(deque.clj:332)
	name.stadig.deque$set_prefix.invoke(deque.clj:425)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
TRACE 300364:
	java.lang.Long.valueOf(Long.java:577)
	clojure.lang.Numbers.num(Numbers.java:1625)
	clojure.lang.Numbers$LongOps.add(Numbers.java:430)
	clojure.lang.Numbers.add(Numbers.java:126)
	clojure.core$range$fn__4149.invoke(core.clj:2618)
	clojure.lang.LazySeq.sval(LazySeq.java:42)
	clojure.lang.LazySeq.seq(LazySeq.java:60)
	clojure.lang.ChunkedCons.chunkedNext(ChunkedCons.java:59)
TRACE 300365:
	clojure.lang.RT.object_array(RT.java:1526)
	name.stadig.deque$array_slice.invoke(deque.clj:157)
	name.stadig.deque$two_buffer_case.invoke(deque.clj:199)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:416)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
TRACE 300366:
	name.stadig.deque$persistent_deque.invoke(deque.clj:609)
	name.stadig.deque$regularize.invoke(deque.clj:336)
	name.stadig.deque$set_prefix.invoke(deque.clj:416)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
	clojure.core$conj.invoke(core.clj:83)
	clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
TRACE 300367:
	clojure.lang.LazilyPersistentVector.createOwning(LazilyPersistentVector.java:24)
	clojure.lang.RT.vector(RT.java:1457)
	name.stadig.deque$two_buffer_case.invoke(deque.clj:184)
	name.stadig.deque$regularize.invoke(deque.clj:311)
	name.stadig.deque$set_prefix.invoke(deque.clj:416)
	name.stadig.deque.PersistentDeque.cons(deque.clj:548)
	name.stadig.deque.PersistentDeque.cons(deque.clj:Unknown line)
	clojure.lang.RT.conj(RT.java:551)
CPU SAMPLES BEGIN (total = 276) Sun Jan 13 05:31:28 2013
rank   self  accum   count trace method
   1  5.80%  5.80%      16 300041 java.lang.ClassLoader.defineClass1
   2  5.43% 11.23%      15 300315 clojure.lang.Util.hash
   3  3.62% 14.86%      10 300324 name.stadig.deque$array_slice.invoke
   4  2.90% 17.75%       8 300313 name.stadig.deque$array_slice.invoke
   5  2.17% 19.93%       6 300290 name.stadig.deque$two_buffer_case.invoke
   6  2.17% 22.10%       6 300320 name.stadig.deque$array_slice.invoke
   7  2.17% 24.28%       6 300335 clojure.lang.Util.hash
   8  2.17% 26.45%       6 300339 clojure.core$range$fn__4149.invoke
   9  1.81% 28.26%       5 300288 clojure.lang.RT.object_array
  10  1.81% 30.07%       5 300296 name.stadig.deque$two_buffer_case.invoke
  11  1.45% 31.52%       4 300153 java.lang.Class.forName0
  12  1.45% 32.97%       4 300316 clojure.lang.Util.hash
  13  1.09% 34.06%       3 300059 java.lang.String.toCharArray
  14  1.09% 35.14%       3 300283 name.stadig.deque$two_buffer_case.invoke
  15  1.09% 36.23%       3 300317 name.stadig.deque$regularize.invoke
  16  1.09% 37.32%       3 300318 name.stadig.deque$set_prefix.invoke
  17  1.09% 38.41%       3 300319 name.stadig.deque$array_slice.invoke
  18  1.09% 39.49%       3 300325 clojure.lang.Util.hash
  19  1.09% 40.58%       3 300337 name.stadig.deque$regularize.invoke
  20  1.09% 41.67%       3 300351 clojure.core$chunk_buffer.invoke
  21  1.09% 42.75%       3 300356 name.stadig.deque$array_slice.invoke
  22  0.72% 43.48%       2 300171 java.util.zip.Inflater.inflateBytes
  23  0.72% 44.20%       2 300289 java.lang.System.arraycopy
  24  0.72% 44.93%       2 300302 name.stadig.deque$two_buffer_case.invoke
  25  0.72% 45.65%       2 300303 name.stadig.deque$two_buffer_case.invoke
  26  0.72% 46.38%       2 300323 name.stadig.deque$color.invoke
  27  0.72% 47.10%       2 300326 clojure.lang.Util.hash
  28  0.72% 47.83%       2 300329 name.stadig.deque$two_buffer_case.invoke
  29  0.72% 48.55%       2 300330 clojure.lang.Util.hash
  30  0.72% 49.28%       2 300347 name.stadig.deque$color.invoke
  31  0.72% 50.00%       2 300348 name.stadig.deque$two_buffer_case.invoke
  32  0.72% 50.72%       2 300352 name.stadig.deque$regularize.invoke
  33  0.36% 51.09%       1 300032 java.security.SecureClassLoader.getPermissions
  34  0.36% 51.45%       1 300061 name.stadig.deque.<clinit>
  35  0.36% 51.81%       1 300062 java.lang.String.substring
  36  0.36% 52.17%       1 300064 java.lang.ClassLoader.findBootstrapClass
  37  0.36% 52.54%       1 300090 java.lang.ClassLoader.findBootstrapClass
  38  0.36% 52.90%       1 300103 clojure.lang.RT.list
  39  0.36% 53.26%       1 300104 clojure.lang.PersistentList.<clinit>
  40  0.36% 53.62%       1 300108 java.lang.String.toCharArray
  41  0.36% 53.99%       1 300109 java.lang.ClassLoader.findBootstrapClass
  42  0.36% 54.35%       1 300118 java.lang.System.arraycopy
  43  0.36% 54.71%       1 300152 java.lang.CharacterDataLatin1.toLowerCase
  44  0.36% 55.07%       1 300156 sun.misc.Unsafe.getObject
  45  0.36% 55.43%       1 300158 java.lang.String.intern
  46  0.36% 55.80%       1 300159 clojure.core__init.__init8
  47  0.36% 56.16%       1 300160 java.math.BigInteger.<clinit>
  48  0.36% 56.52%       1 300162 clojure.core__init.__init13
  49  0.36% 56.88%       1 300166 clojure.core__init.__init15
  50  0.36% 57.25%       1 300167 sun.misc.Unsafe.getObjectVolatile
  51  0.36% 57.61%       1 300168 clojure.core__init.__init20
  52  0.36% 57.97%       1 300169 java.lang.Class.forName0
  53  0.36% 58.33%       1 300170 java.lang.String.intern
  54  0.36% 58.70%       1 300172 clojure.core__init.load
  55  0.36% 59.06%       1 300173 clojure.core__init.load
  56  0.36% 59.42%       1 300174 java.lang.System.arraycopy
  57  0.36% 59.78%       1 300175 clojure.core__init.load
  58  0.36% 60.14%       1 300176 java.lang.Thread.currentThread
  59  0.36% 60.51%       1 300177 clojure.core__init.load
  60  0.36% 60.87%       1 300178 java.security.AccessController.doPrivileged
  61  0.36% 61.23%       1 300179 java.lang.StringCoding$StringEncoder.encode
  62  0.36% 61.59%       1 300180 java.util.Arrays.copyOfRange
  63  0.36% 61.96%       1 300181 clojure.core__init.load
  64  0.36% 62.32%       1 300182 clojure.core__init.load
  65  0.36% 62.68%       1 300183 java.lang.ClassLoader.findBootstrapClass
  66  0.36% 63.04%       1 300184 java.lang.AbstractStringBuilder.<init>
  67  0.36% 63.41%       1 300185 clojure.core$print_str.<clinit>
  68  0.36% 63.77%       1 300186 clojure.core__init.load
  69  0.36% 64.13%       1 300187 java.util.zip.ZipCoder.getBytes
  70  0.36% 64.49%       1 300188 clojure.core__init.load
  71  0.36% 64.86%       1 300189 java.util.zip.ZipFile.getEntry
  72  0.36% 65.22%       1 300195 clojure.core__init.load
  73  0.36% 65.58%       1 300196 clojure.core__init.load
  74  0.36% 65.94%       1 300197 java.lang.ClassLoader.findBootstrapClass
  75  0.36% 66.30%       1 300198 clojure.core_proxy__init.load
  76  0.36% 66.67%       1 300199 java.lang.Object.hashCode
  77  0.36% 67.03%       1 300200 clojure.genclass__init.load
  78  0.36% 67.39%       1 300201 java.lang.Object.clone
  79  0.36% 67.75%       1 300202 java.util.zip.ZipFile.getEntry
  80  0.36% 68.12%       1 300203 clojure.core$emit_impl.<clinit>
  81  0.36% 68.48%       1 300204 java.lang.System.nanoTime
  82  0.36% 68.84%       1 300205 clojure.core$refer.doInvoke
  83  0.36% 69.20%       1 300206 clojure.lang.PersistentHashMap$NodeSeq.first
  84  0.36% 69.57%       1 300207 clojure.lang.Util.equiv
  85  0.36% 69.93%       1 300208 sun.misc.Unsafe.getObject
  86  0.36% 70.29%       1 300209 clojure.lang.PersistentHashMap$BitmapIndexedNode.assoc
  87  0.36% 70.65%       1 300210 clojure.lang.PersistentHashMap$BitmapIndexedNode.find
  88  0.36% 71.01%       1 300211 clojure.instant__init.load
  89  0.36% 71.38%       1 300226 clojure.lang.PersistentArrayMap.indexOf
  90  0.36% 71.74%       1 300227 clojure.lang.PersistentArrayMap.indexOf
  91  0.36% 72.10%       1 300228 sun.misc.Unsafe.getObject
  92  0.36% 72.46%       1 300229 java.lang.String.intern
  93  0.36% 72.83%       1 300230 java.util.concurrent.atomic.AtomicBoolean.get
  94  0.36% 73.19%       1 300231 java.lang.CharacterDataLatin1.toLowerCase
  95  0.36% 73.55%       1 300232 java.lang.Object.clone
  96  0.36% 73.91%       1 300233 java.lang.AbstractStringBuilder.<init>
  97  0.36% 74.28%       1 300235 clojure.lang.LockingTransaction.run
  98  0.36% 74.64%       1 300253 java.lang.AbstractStringBuilder.<init>
  99  0.36% 75.00%       1 300254 java.io.UnixFileSystem.getBooleanAttributes0
 100  0.36% 75.36%       1 300255 java.lang.Throwable.fillInStackTrace
 101  0.36% 75.72%       1 300256 clojure.java.io__init.load
 102  0.36% 76.09%       1 300260 java.util.zip.ZipFile.freeEntry
 103  0.36% 76.45%       1 300267 java.net.URL.<init>
 104  0.36% 76.81%       1 300275 java.lang.Thread.currentThread
 105  0.36% 77.17%       1 300276 clojure.lang.PersistentHashMap.assoc
 106  0.36% 77.54%       1 300277 java.net.URLClassLoader.findClass
 107  0.36% 77.90%       1 300278 sun.misc.Unsafe.compareAndSwapObject
 108  0.36% 78.26%       1 300279 name.stadig.deque.protocol$fn__81.invoke
 109  0.36% 78.62%       1 300280 java.lang.Object.getClass
 110  0.36% 78.99%       1 300281 java.lang.Object.getClass
 111  0.36% 79.35%       1 300282 clojure.lang.RT.object_array
 112  0.36% 79.71%       1 300284 java.lang.Object.getClass
 113  0.36% 80.07%       1 300285 java.lang.Object.getClass
 114  0.36% 80.43%       1 300286 clojure.lang.RT.object_array
 115  0.36% 80.80%       1 300287 clojure.lang.ChunkBuffer.add
 116  0.36% 81.16%       1 300291 java.lang.System.arraycopy
 117  0.36% 81.52%       1 300292 name.stadig.deque$two_buffer_case.invoke
 118  0.36% 81.88%       1 300293 name.stadig.deque$red_QMARK_.invoke
 119  0.36% 82.25%       1 300294 name.stadig.deque$set_prefix.invoke
 120  0.36% 82.61%       1 300295 clojure.lang.ArrayChunk.reduce
 121  0.36% 82.97%       1 300297 name.stadig.deque$set_prefix.invoke
 122  0.36% 83.33%       1 300298 name.stadig.deque$two_buffer_case.invoke
 123  0.36% 83.70%       1 300299 name.stadig.deque$set_prefix.invoke
 124  0.36% 84.06%       1 300300 name.stadig.deque$two_buffer_case.invoke
 125  0.36% 84.42%       1 300301 name.stadig.deque$two_buffer_case.invoke
 126  0.36% 84.78%       1 300304 name.stadig.deque$two_buffer_case.invoke
 127  0.36% 85.14%       1 300305 name.stadig.deque$two_buffer_case.invoke
 128  0.36% 85.51%       1 300306 name.stadig.deque$two_buffer_case.invoke
 129  0.36% 85.87%       1 300307 name.stadig.deque$two_buffer_case.invoke
 130  0.36% 86.23%       1 300308 name.stadig.deque$two_buffer_case.invoke
 131  0.36% 86.59%       1 300309 name.stadig.deque$two_buffer_case.invoke
 132  0.36% 86.96%       1 300310 name.stadig.deque$two_buffer_case.invoke
 133  0.36% 87.32%       1 300311 name.stadig.deque$two_buffer_case.invoke
 134  0.36% 87.68%       1 300312 clojure.lang.ChunkedCons.chunkedMore
 135  0.36% 88.04%       1 300314 name.stadig.deque$set_prefix.invoke
 136  0.36% 88.41%       1 300321 clojure.core.protocols$fn__5890.invoke
 137  0.36% 88.77%       1 300322 clojure.core.protocols$fn__5890.invoke
 138  0.36% 89.13%       1 300327 clojure.lang.Numbers$LongOps.isPos
 139  0.36% 89.49%       1 300328 name.stadig.deque$two_buffer_case.invoke
 140  0.36% 89.86%       1 300331 name.stadig.deque$array_slice.invoke
 141  0.36% 90.22%       1 300332 clojure.core.protocols$fn__5890.invoke
 142  0.36% 90.58%       1 300333 name.stadig.deque$persistent_deque.invoke
 143  0.36% 90.94%       1 300334 clojure.core.protocols$fn__5890.invoke
 144  0.36% 91.30%       1 300336 name.stadig.deque$array_slice.invoke
 145  0.36% 91.67%       1 300338 name.stadig.deque$red_QMARK_.invoke
 146  0.36% 92.03%       1 300340 clojure.lang.Util.hash
 147  0.36% 92.39%       1 300341 name.stadig.deque$array_slice.invoke
 148  0.36% 92.75%       1 300342 name.stadig.deque$persistent_deque.invoke
 149  0.36% 93.12%       1 300343 clojure.lang.Util.hash
 150  0.36% 93.48%       1 300344 name.stadig.deque$two_buffer_case.invoke
 151  0.36% 93.84%       1 300345 name.stadig.deque$array_slice.invoke
 152  0.36% 94.20%       1 300346 name.stadig.deque.PersistentDeque.cons
 153  0.36% 94.57%       1 300349 clojure.lang.RT.object_array
 154  0.36% 94.93%       1 300350 name.stadig.deque$regularize.invoke
 155  0.36% 95.29%       1 300353 clojure.core$chunk_cons.invoke
 156  0.36% 95.65%       1 300354 clojure.lang.Util.hash
 157  0.36% 96.01%       1 300355 clojure.lang.LazilyPersistentVector.createOwning
 158  0.36% 96.38%       1 300357 clojure.core$seq.invoke
 159  0.36% 96.74%       1 300358 clojure.lang.Util.hash
 160  0.36% 97.10%       1 300359 clojure.lang.LazilyPersistentVector.createOwning
 161  0.36% 97.46%       1 300360 name.stadig.deque$persistent_deque.invoke
 162  0.36% 97.83%       1 300361 name.stadig.deque$persistent_deque.invoke
 163  0.36% 98.19%       1 300362 name.stadig.deque$two_buffer_case.invoke
 164  0.36% 98.55%       1 300363 clojure.lang.Util.hash
 165  0.36% 98.91%       1 300364 java.lang.Long.valueOf
 166  0.36% 99.28%       1 300365 clojure.lang.RT.object_array
 167  0.36% 99.64%       1 300366 name.stadig.deque$persistent_deque.invoke
 168  0.36% 100.00%       1 300367 clojure.lang.LazilyPersistentVector.createOwning
CPU SAMPLES END
